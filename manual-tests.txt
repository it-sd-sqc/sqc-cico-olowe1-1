Use `./build.sh` to build CiCo and `./run.sh` to run it if using the command line. You can otherwise use your IDE to build and run CiCo.

# Module 2: Sample test for the happy path. 

## Test steps
1. Build and run CiCo.
2. Enter 00000000 into the field and click Update.
3. Wait 11 seconds.

## Expected results:
* The status panel should appear after step 2.
* The main panel should appear after step 3.

# Module 2: Sample test for invalid card numbers.

## Test steps
1. Build and run CiCo.
2. Enter 99999999 into the field and click Update.
3. Wait 11 seconds.

## Expected results:
* The error panel should appear after step 2.
* The main panel should appear after step 3.

# Module 2: Help users recognize, diagnose, and recover from errors

## Test steps
1. Build and run CiCo.
2. Enter 99999999 into the field and click Update.

## Expected results
* The panel should display "Please show your card to staff to validate." after step 2.

# Module 2: Help and documentation

## Test steps
1. Build and run CiCo.

## Expected results
* The version number should be displayed after "CiCo" at the bottom.


# Module 3: Visibility of system status 

## Test steps
1. Build and run CiCo.
2. Enter 00000000 into the field and click Update.
3. Wait for status panel to close.
4. Enter 00000000 into the field and click Update.

## Expected results
* Should display "Checked IN" after step 2.
* Should display "Checked OUT" after step 4.

# Module 3: Match between system and the real world

## Test steps
1. Build and run CiCo.
2. Enter 00000000 into the field and click Update.

## Expected results
* Should display "Developer" for the user name.

Ticket 501: Allow next user to check in/out without waiting for timeout

Manual Test Steps:
1. Scan a card.
2. Observe timeout before next scan is allowed.
3. Press new "Next" button (if added).
4. Verify next user can immediately scan and check in/out.

Expected Result:
The timeout is bypassed when pressing the "Next" button, but automatic timeout still works if button is not pressed.


